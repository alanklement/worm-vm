********* Look at bytecodes. Sub & Add are reversed

*****in**input plus one**********

0: 20400000 // move value of reg E to reg A
1: D0000007 // jump to command @ 7 if reg A if not zero
2: 11000001 // set B to 1
3: 50000000 // Put input from user to reg A - user inputs 1
4: 70100000 // add reg A & reg B. Put sum in reg A
5: 60000000 // write value of reg A to output (2)
6: B0000000 // JUMP to command @ 0
7: 00000000 // do nothing


1: 0,0,0,0,0,0
2: 0,0,0,0,0,0
3: 0,1,0,0,0,0
4: 1,1,0,0,0,0
5: 2,1,0,0,0,0
6: 2,1,0,0,0,0
7: 2,1,0,0,0,0

Infinit loop. command @ 6 should have a value of 0 and not 1.  


********Print expresssion**********


0: 10000006 // set reg A to 6
1: 11000003 // set reg B to 3
2: A0100000 // Put quotent of A / B into A
3: 11000005 // set reg B to 5
4: 70100000 // put sum of A & B into A
5: 60000000 // write A to output

1: 6,0,0,0,0,0
2: 6,3,0,0,0,0
3: 2,3,0,0,0,0
4: 2,5,0,0,0,0
5: 7,5,0,0,0,0
5: 7,5,0,0,0,0


********Sum of Input**********

00: 15000000 // set reg S to 0
01: 10000000 // set reg A to 0
02: 45000000 // store memory location @ value reg S to value of reg A
03: 20400000 // move reg value of reg E to reg A
04: D000000E // if A is not zero, go to command #14
05: 110003E8 // set B to 1000
06: 30500000 // load value of memeory location @ value reg S into A
07: 80100000 // put into reg A difference of reg A and B
08: E000000E // if A is greater than 0, go to command #14
09: 31500000 // load value of memeory location @ value reg S into B
10: 50000000 // put user input into reg A - user inputs 3000
11: 70100000 // put into reg A sum of A & B
12: 45000000 // store valud of A into memory locaiton @ reg S
13: B0000003 // jump to command # 3

14: 30500000 // load value of memeory location @ value reg S into A
15: 60000000 // write

2000,1000,0,0,0,0 [0:3000]

********Reverse input**********

just keeps storing values into memory....