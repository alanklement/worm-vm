#
# print only input numbers that are in the fibonacci sequence
#

    # D holds input

    #        B = C = 1
    SET    %B, $1
    SET    %C, $1

  L10: # while (!EOF) {
    MOVE   %A, %E
    JMP_NZ L11

    #        D = read()
    READ
    MOVE   %D, %A

    #        # If input is bellow current fib #s, reduce them
    #        # to just below input & continue.
  L30: #     while (D < B && D < C) {
    SET    %A, $1
    SUB    %A, %B
    ADD    %A, %D
    JMP_GT L31
    SET    %A, $1
    SUB    %A, %C
    ADD    %A, %D
    JMP_GT L31

    SUB    %C, %B
    SUB    %B, %C

    JMP    L30
  L31: #     }

  L20: #     while (B < D && C < D) {
    SET    %A, $1
    SUB    %A, %D
    ADD    %A, %B
    JMP_GT L21
    SET    %A, $1
    SUB    %A, %D
    ADD    %A, %C
    JMP_GT L21

    #            # next two fib numbers
    #            B += C
    ADD    %B, %C
    #            C += B
    ADD    %C, %B

    JMP    L20
  L21: #     }

    #        if (D == B || D == C) {
    # because of how the cmp was done, if A == 1, then D == one of them
    MOVE   %A, %D
    SUB    %A, %B
    JMP_Z  L22
    MOVE   %A, %D
    SUB    %A, %C
    JMP_NZ L10

  L22:
    #            write(D)
    MOVE   %A, %D
    WRITE

    #        }
    JMP    L10
  L11: # }

    NOOP

